name: Gradle Package

on:
  push:
    branches: [master]

jobs:

  vault:
    name: Vault
    runs-on: ubuntu-latest
    env:
      HCP_CLIENT_ID: 9RN7dXQtvsWhtA9pwQUMbaEX8wdG7Vpr
      HCP_CLIENT_SECRET: yeLfSOfxSs7xwddkQ0oV_RGggwmC2QBTPq3hXtuFQ_WhemNBB4QjhdX2Ka1xFqBj
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v2
      - name: Obtener Token de Acceso HCP
        run: |
          HCP_API_TOKEN=$(curl --location 'https://auth.hashicorp.com/oauth/token' \
          --header 'content-type: application/json' \
          --data '{
            "audience": "https://api.hashicorp.cloud",
            "grant_type": "client_credentials",
            "client_id": "${{ env.HCP_CLIENT_ID }}",
            "client_secret": "${{ env.HCP_CLIENT_SECRET }}"
          }' | jq -r .access_token)
      - name: Imprimir variables de entorno
        run: |
          echo HCP_CLIENT_ID: $HCP_CLIENT_ID
          echo HCP_CLIENT_SECRET: $HCP_CLIENT_SECRET
          echo HCP_API_TOKEN: $HCP_API_TOKEN
      - name: Obtener sonar token
        run: |
          SONAR_TOKEN=$(curl \
          --location "https://api.cloud.hashicorp.com/secrets/2023-06-13/organizations/6fbcbccd-928a-47fc-b943-8487abf5d659/projects/889fad23-0cd7-4483-a6bd-2bff679ad9e5/apps/Galaga/open/SONAR_TOKEN" \
          --request GET \
          --header "Authorization: Bearer $HCP_API_TOKEN" | jq)
          echo El secreto es: $SONAR_TOKEN
            
  check-secret:
    name: check-secret
    environment:
      name: productions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Horusec
        run: |
          curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/master/deployments/scripts/install.sh | bash -s latest
          horusec version
          touch horusec.json
          set +e
          horusec start -p . -e="true" -o="json" -O=horusec.json --disable-docker --information-severity=true --log-level=DEBUG%
          set -e
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Run Security Tools
        run: python ./.github/scripts/security-tools.py horusec.json horusec
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
            name: horusec
            path: horusec.json

  sonarqube:
    needs: vault
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: $SONAR_TOKEN
        run: ./gradlew build sonar --info
  
  build:
    needs: [check-secret, sonarqube]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Gradle Clean
        run: ./gradlew clean

      - name: Execute Gradle build
        run: ./gradlew build
        
      - name: Run Test
        run: ./gradlew test

      - name: Generate Jacoco Report
        run: ./gradlew jacocoTestReport

      - name: Run Coverage Verification
        run: ./gradlew jacocoTestCoverageVerification

